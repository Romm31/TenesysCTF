const express = require("express");
const path = require("path");

const app = express();

// Middleware untuk parsing request body
app.use(express.urlencoded({ extended: true }));
app.use(express.json());

// **Gunakan folder PUBLIC untuk file statis**
app.use(express.static(path.join(__dirname, "public")));

// **Simulasi database user**
const users = [
  { username: "admin", password: "admin" },
  { username: "user", password: "user" }
];

// **Route utama (login page)**
app.get("/", (req, res) => {
  res.sendFile(path.join(__dirname, "public", "index.html"));
});

// **Route untuk login**
app.post("/api/login", (req, res) => {
  const { username, password } = req.body;

  // **Deteksi SQL Injection sederhana**
  if (/'\s*OR\s*'1'='1/i.test(username)) {
    return res.redirect("/success.html?role=hacker");
  }

  // **Cek user di "database"**
  const user = users.find((u) => u.username === username && u.password === password);
  if (user) {
    return user.username === "admin"
      ? res.redirect("/admin.html")
      : res.redirect("/user.html");
  }

  return res.redirect("/failed.html");
});

// **Route untuk halaman HTML lainnya**
app.get("/:page", (req, res) => {
  const filePath = path.join(__dirname, "public", `${req.params.page}.html`);
  res.sendFile(filePath, (err) => {
    if (err) {
      res.status(404).send("404 Not Found");
    }
  });
});

// **Jalankan server di Vercel**
const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`ðŸš€ Server running on port ${PORT}`);
});

// **Ekspor Express app agar bisa berjalan di Vercel**
module.exports = app;
